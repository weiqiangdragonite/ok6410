<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen">综合&nbsp;&nbsp;|&nbsp;&nbsp;<a href="394_local.htm">本地库</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="394_net.htm">网络库</a><br /></div>
<div class="zhengwen">
语句：<span class='orange' >有了内存分区后，我们还需要一个内存控制块来管理内存分区里的内存块，实现真正的内存分配。</span><br><br>
在本地库和网络库共找出相似内容：11个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">从空内存控制块链表中摘取一个控制块，再根据内存分区中内存块的大小，把这个内存分区的</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……个内存控制块的指针，这个内存控制块所控制内存分区的内存块大小为1KB．如图2所示．图2小块内存管理中存储内存控制块首地址的指针数组当应用程序向系统申请一个内存分区时，先<span class='green'>从空内存控制块链表中摘取一个控制块，再根据内存分区中内存块的大小，把这个内存分区的</span>内存控制块首地址放人到这个指针数组的相应位置．申请内存块的大小一般不会恰好等于某个固定内存块的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《嵌入式操作系统μC／OS-Ⅱ的一种内存管理算法》<br>作者：李平勇等<br>出处：《微电子学与计算机》&nbsp;2011年11期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">从空内存控制块链表中摘取一个控制块，再根据内存分区中内存块的大小，把这个内存分区的</span>
</td>
</tr>

<tr>
<td align="left" width="100%">
<font color="#666666">来源(互联网)：</font><br>
<a target='_blank' href=http://scholar.google.com/schhp?hl=zh-CN&as_sdt=8b76c84d29de56ee77f71f2d76011e58>http://scholar.google.com/schhp?hl=zh-CN&as_sdt=8b76c84d29de56ee77f71f2d76011e58</a>
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">（1）内存分区控制块为了便于管理内存分区，使用内存分区控制块的数据结构来跟踪每一个内存分区。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……对啪mPartLib库的增强扩展，包括：错误处理选项、对齐分配、寻找最大空闲块；提供3个与ANsI兼容的函数；calloc（）、recalloc（）和cfree（）。1．VxWorks内存管理主要数据结构和库函数分析<span class='green'>（1）内存分区控制块为了便于管理内存分区，使用内存分区控制块的数据结构来跟踪每一个内存分区。</span>每个内存分区都有它自己的内存分区控制块。所以每次调用鹏mPartCreate创建一个内存分区的时候都要先要动态……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《嵌入式系统ZXR10缓冲区管理研究与实现》<br>作者：刘东栋<br>出处：《西北工业大学》&nbsp;2007
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">了内存分区控制块的数据结构来跟踪每一个内存分区。每个内存分区都有它自己的内存分区控制块。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……)的管理。VxWorks对内存的管理是基于内存分区的概念，所谓的内存分区就是一个连续的内存块；系统中有一个默认的系统内存分区，用户也可以创建自己的内存分区；为了便于管理内存分区，在VxWorks中使用<span class='green'>了内存分区控制块的数据结构来跟踪每一个内存分区。每个内存分区都有它自己的内存分区控制块。</span>所以每次调用memPartCreate创建一个内存分区的时候都要先要动态创建一个mem_part类型的内存分区控制块用来记录将……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于VxWorks的通信支撑系统设计》<br>作者：张宪军<br>出处：《电子科技大学》&nbsp;2006
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">了内存分区控制块的数据结构来跟踪每一个内存分区。每个内存分区都有它自己的内存分区控制块。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……：容易产生碎片，但灵活、不浪费；partition是定长的内存区，用户可以从创建的partition中分配buffer，其特点是：无碎片、效率高，但浪费。通常隋况下为了便于管理内存分区，在Vxworks中使用<span class='green'>了内存分区控制块的数据结构来跟踪每一个内存分区。每个内存分区都有它自己的内存分区控制块。</span>所以每次调用memPartCreate创建一个内存分区的时候都要先动态地创建一个mempart类型的内存分区控制块用来记录将创建……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《内存池在Vxworks系统内存管理中应用》<br>作者：邹寅伟等<br>出处：《科学技术与工程》&nbsp;2007年10期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">池集内存区域每一个内存池都由一个内存池控制块管理，所有的内存池控制块由一个内存池控制</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……工学院学报3号节点表示的内存块的起始单元，通过3号节点可知该内存块有200个内存单元．动态内存块的分配和释放，就是对堆节点、单元信息表以及堆索引表的管理．1．3<span class='green'>池集内存区域每一个内存池都由一个内存池控制块管理，所有的内存池控制块由一个内存池控制</span>块数组管理．如图6，该数组位于模块内存控制区域中；池集内存控制结构中的ptPoolCtrl指针指向内存池……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《嵌入式实时动态内存管理机制研究与应用》<br>作者：顾胜元等<br>出处：《重庆理工大学学报（自然科学版）》&nbsp;2009年1期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">7</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">是通过输入参数内存控制块did，从did管理的内存分区中分配一个内存块，返回分配的内存块的起始</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……MemDelete操作是从己分配内存控制块集合mid和已分配的内存allocatedmem中分别删去内存控制块did和did所占有的内存空间，并且从maddr、mblksize、mnblks、mnfree和munusedblks中去掉定义域为did的关系。MemGet操作的作用<span class='green'>是通过输入参数内存控制块did，从did管理的内存分区中分配一个内存块，返回分配的内存块的起始</span>地址。在执行此操作之前要求输入参数did是一个已分配的内存控制块，并且该内存分区的空闲内存块的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于B方法的嵌入式实时操作系统的设计》<br>作者：陈丹敏<br>出处：《河南大学》&nbsp;2009
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">8</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">的各内存块都是空闲的，内存控制块及对应的内存分区和分区内的内存块之间的关系如图1</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……便于内存的管理，在pC／OSII中使用内存控制块节用来存储一个指针，指向下一个空闲内存块，内存控制块的OSMemFreeList域指向空闲内存块链表的第一个空闲内存块。对于一个新建立的内存分区，分区中<span class='green'>的各内存块都是空闲的，内存控制块及对应的内存分区和分区内的内存块之间的关系如图1</span>所示[2|。(MemoryControlBlocks)(见图1)的数据结构来跟踪每一个内存分区。分区中的各大小……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《μC/OSⅡ内存管理的一种改进方法》<br>作者：陈凯明等<br>出处：《计算机技术与发展》&nbsp;2005年5期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">9</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">各个内存块都是空闲的，内存控制块及对应的内存分区和分区内的内存控制块之间的关系如图。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……分区中的各个大小相同的内存控制块的头几个字节用来存储一个指针，指向下一个空闲内存块，内存控制块的OSMemFreeList域指向空闲内存块链表的第一个空闲内存块。对于一个新建立的内存分区，分区中的<span class='green'>各个内存块都是空闲的，内存控制块及对应的内存分区和分区内的内存控制块之间的关系如图。</span>uC／OSll只支持固定大小的内存分区，很容易造成内存的浪费；其次，它的任务栈空间和内存分区……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于无线传感器网络操作系统底层平台及内存管理的研究》<br>作者：吴福青<br>出处：《中国科学技术大学》&nbsp;2009
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">10</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">块的内存分区指针OSmemAddr指向了内存分区，内存分区的各个内存块又组成了一个单向链表，内存控制块</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……获得的空余内存块数当应用程序调用函数OSMemCreate0建立一个内存分区之后，内存控制块与内存分区和内存块之问的关系如图3．10(a)所示。从图3．10(b)中可知，内存控制<span class='green'>块的内存分区指针OSmemAddr指向了内存分区，内存分区的各个内存块又组成了一个单向链表，内存控制块</span>的链表指针OSMemFreeList就指向这个单链表的头。3．4．3空内存控制块链表与pC／OS……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《μCOS-Ⅱ优先级调度算法改进与微内核研究》<br>作者：苑野<br>出处：《长春工业大学》&nbsp;2007
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">11</div>
<font color="#666666">相似度：</font><span class='orange' >40</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">内存分区中有20个内存块(通常内存分区中的内存块数要大于这个数值)，每个内存块4个</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……要保存链接指针，所以内存分区中每个内存块大小必须至少为一个指针的大小。由此可见，这种内存管理方法的内存利用率是非常高的，每个分区只需要一个16字节大小的内存控制块来管理分区。假设每个<span class='green'>内存分区中有20个内存块(通常内存分区中的内存块数要大于这个数值)，每个内存块4个</span>字节(微浏览器只有一个数据结构只有4个字节大小)，那么利用率为：20×4÷(20×4……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《嵌入式微浏览器的研究与实现》<br>作者：王志利<br>出处：《电子科技大学》&nbsp;2003
</td>
</tr>
</table>




<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
