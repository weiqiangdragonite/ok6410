<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen">综合&nbsp;&nbsp;|&nbsp;&nbsp;<a href="273_local.htm">本地库</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="273_net.htm">网络库</a><br /></div>
<div class="zhengwen">
语句：<span class='red' >每个任务都属于整个应用的某一部分，都被赋予一定的优先级，有自己独立的栈空间，彼此独立运行[6]。</span><br><br>
在本地库和网络库共找出相似内容：16个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='red' >63</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……任务的响应、切换和调度等功能。在lIc／os—II中每个任务任何时候都处于以下五种状态之一：休眠态、就绪态、运行态、挂起态和中断桂林工学院硕士学位论文态。uc／OS—II是以任务为基本单位调度的，<span class='green'>每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间。</span>任务处于非运行态时，该任务运行时的CPU状态和寄存器保存在自己的堆栈中，当被调度到运行态时，……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于ARM的特种焊接机运动控制系统实时调度的研究》<br>作者：郑双<br>出处：《桂林工学院》&nbsp;2008
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='red' >62</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间(</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……就是对任务的处理，下面就从这个角度来介绍4．2．1任务及其状态一个任务，也称作一个线程，是一个简单的程序，该程序可以认为CPU完全只属该程序自己。实时应用程序的设计过程，包括如何把问题分割成多个任务，<span class='green'>每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间(</span>如图4-1所示)。山东大学硕士学位论文任务1堆栈任务2堆栈任务n堆栈噶}≮土7么……图4……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于ARM的便携式PID参数自整定器》<br>作者：王强<br>出处：《山东大学》&nbsp;2006
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='red' >62</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……的应用程序层次化。使用多任务，应用程序将更容易设汁与维护。铂!多任务系统中，一个任务就是一个简单的程序，该程序可以认为CPU完全只属该程序自己。实时应用程序的设计过程，包括如何把问题分割成多个任务，<span class='green'>每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间，</span>如图5-2．4所示。if-备柠制换仟辑粹制按仟辑柠制排卵“圈5-2．4……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《DSP数字音效处理系统的算法研究与系统实现》<br>作者：曾荣<br>出处：《华中科技大学》&nbsp;2003
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='red' >62</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……输出设备。可以被一个以上任务使用的资源叫做共享资源。3．任务与多任务一个任务，即一个线程，是一个简单的程序，该程序可以认为CPU完全只属该程序自己。实时应用程序的设计过程，包括如何把问题分割成多个任务，<span class='green'>每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间，</span>如图2．1所示，并且每个任务都是一个无限的循环。多任务运行的实现实际上是靠CPU在许多任务之间转换、……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《音频采集系统框架设计及μCOS-Ⅱ移植研究》<br>作者：李阳<br>出处：《哈尔滨工程大学》&nbsp;2007
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='red' >60</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的一部分，都被赋予一定的优先级，有自己的一套CPU寄存器和栈空间，如图1所</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……也就是CPU寄存器中的全部内容。这些内容被保存在任务自己的堆栈中，人栈工作完成后就把下一个将要运行的任务的当前状况从该任务的栈中重新装入CPU寄存器，并开始下一个任务的运行，这一过程就是COIltextswitch。<span class='green'>每个任务都是整个应用的一部分，都被赋予一定的优先级，有自己的一套CPU寄存器和栈空间，如图1所</span>示。2．2任务的切换与调度雅IH赡IH骧]幽CPU[图1多任务vC／OS—II是可抢占实时多……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《嵌入式操作系统任务切换方法对比分析》<br>作者：孙利锋等<br>出处：《单片机与嵌入式系统应用》&nbsp;2011年7期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='red' >60</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……南开大学硕士论文第三章一个嵌入式实时内核SmartOS的设计与实现3．2．4任务管理一个任务，可以看作是一个进程或一段程序，该程序可以认为CPU完全只属该程序自己。实时应用程序的设计过程，包括如何把问题分割成多个任务，<span class='green'>每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈</span>空间。如图3．9【5l为“dOS．II的多任务示意图。任务1堆栈任务2堆栈任务N堆找CPU寄存……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《一个嵌入式实时内核SmartOS的设计及其在无线系统中的应用》<br>作者：赵春颖<br>出处：《南开大学》&nbsp;2005
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">7</div>
<font color="#666666">相似度：</font><span class='orange' >59</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……使用多任务，应用程序将更容易设计与维护。2..任务与任务间切换一个任务，也称作一个线程，是一个简单的程序，该程序可以认为CPU完全只属该程序自己。实时应用程序的设计过程，包括如何把问题分割成多个任务，<span class='green'>每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间</span>。典型地、每个任务都是一个无限的循环。每个任务都处在以下5种状态之一的状态下，这5种状态是休眠态，……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于嵌入式实时操作系统Web服务器的研究与实现》<br>作者：蒋智勇<br>出处：《北京交通大学》&nbsp;2004
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">8</div>
<font color="#666666">相似度：</font><span class='orange' >59</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的一部分，都被赋予一定的优先级，有自己的一套CPU寄存器和栈空间。(1)任务</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……延时等，实时内核使得CPU的利用更为有效Il2l。3．2．2ttCOS—II系统的任务结构每个任务一般都是一个无限的循环，任务在运行时可以认为CPU完全只属于该任务本身，第3章laCOS-11系统任务调度与实时控制的研究<span class='green'>每个任务都是整个应用的一部分，都被赋予一定的优先级，有自己的一套CPU寄存器和栈空间。(1)任务</span>的定义任务的创建函数的原型如下：void*r，6ata，／／任务的参数指针OSSTK*pros，／／任务的堆栈栈……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于μCOS-Ⅱ的微机保护装置的设计与实现》<br>作者：何其昕<br>出处：《东南大学》&nbsp;2009
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">9</div>
<font color="#666666">相似度：</font><span class='orange' >58</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……的优先级越高。iaC／OS一Ⅱ总是运行进入就绪态的优先级最高的任务。一个任务，也称作一个线程，是一个简单的程序，程序认为CPU完全只属于该程序自己。应用程序的设计过程，包括如何把问题分割成多个任务，<span class='green'>每个任务都是整个应用的某一部分，每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间</span>。多任务运行的实现实际上是靠cPu(中央处理单元)在许多任务之间转换、调度。2任务控制块结构任务控制块(……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《μC/OS-Ⅱ内核结构分析及多任务调度实现》<br>作者：沈金荣等<br>出处：《计算机工程》&nbsp;2006年23期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">10</div>
<font color="#666666">相似度：</font><span class='orange' >56</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分9每个任务被赋予一定的优先级9有它自己的一套CPU寄存器和自己的栈空间0</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……下面我们将由浅入深地介绍!C/OS-"的任务调度原理0一%!C/OS-"的任务#一$任务的定义一个任务9也称做一个线程9是一个简单的程序0实时应用程序的设计过程9包括如何把问题分割成多个任务9<span class='green'>每个任务都是整个应用的某一部分9每个任务被赋予一定的优先级9有它自己的一套CPU寄存器和自己的栈空间0</span>一般来说9任务通常是一个无限的循环0!C/OS-"的任务实际是一段程序9执行特定的功能9拥有自己的代码……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《嵌入式实时系统μC/OS-Ⅱ的任务调度原理》<br>作者：崔志明等<br>出处：《大众科技》&nbsp;2006年8期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">11</div>
<font color="#666666">相似度：</font><span class='orange' >55</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的某一部分，每个任务披赋予一定的优先级，有它皇己的一套CPU奇存器和自己的堆栈</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……它的目的是在特定的调度点上决定下一个进入ECU流水线的任务。任务，也称作一个进程，是一个简单的程序，该程序可以认为CPU完全只属该程序自己。实时应用程序的设计过程，包括如何把问题分割成多个任务，<span class='green'>每个任务都是整个应用的某一部分，每个任务披赋予一定的优先级，有它皇己的一套CPU奇存器和自己的堆栈</span>空间。ContextSwitch，即上下文切换，实际禽义是丁工务浙江大学硕士学位论文切换，或CPU寄存器内容切换。当多任务内核……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《SmartOSEK操作系统设计和空间优化》<br>作者：陈威<br>出处：《浙江大学》&nbsp;2005
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">12</div>
<font color="#666666">相似度：</font><span class='orange' >52</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个义务都是整个应用的一部任务，赋予义务被付与一定的任务管理。自己办理它本身的一套CPU自己器和本身的栈空间</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……及其优先级在嵌入式操作任务中，义务也称作线程，是一个简单的程序，该程序可以认为CPU完全属于任务程序。义务是嵌入式操作系统中能够单元运行的单位。嵌入式应用程序的就是过程，问题如何把标题分割任务多个义务的任务。<span class='green'>每个义务都是整个应用的一部任务，赋予义务被付与一定的任务管理。自己办理它本身的一套CPU自己器和本身的栈空间</span>(如图4-1所示)。﻿上海交通大学硕士论文嵌入式操作系统--对μC/OS调度II内核调剂算法的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《嵌入式操作系统对μCOS-Ⅱ内核调度算法的改进》<br>作者：王沈卫<br>出处：《上海交通大学》&nbsp;2005
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">13</div>
<font color="#666666">相似度：</font><span class='orange' >46</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">每个任务都是整个应用的一部分被赋予一定的优先级有自己的一套CPU寄存器和堆栈空间一般都是空函数不会返回任何值</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……式实时多任务内核它是用ANSI的C语言编写关键部分用汇编语言编写可供不同构架的微处理器使用!C/OS-II的任务实际上是一段程序该程序可认为CPU完全只属于该程序本身实时应用程序的设计过程包括如何把问题分割成多个任务<span class='green'>每个任务都是整个应用的一部分被赋予一定的优先级有自己的一套CPU寄存器和堆栈空间一般都是空函数不会返回任何值</span>任务执行一次后设置延时参数OSTdly表明经过OSTdly个定时器中断周期后任务再次运行然后进行任务切换让处于就绪态的优先级最高的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《μC/OS-Ⅱ在TMS320F2812上的移植》<br>作者：潘超军等<br>出处：《江苏电机工程》&nbsp;2005年4期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">14</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">循环地各自实现某一特定的功能。每个任务被赋予一定的优先级，有自己的一套cPu寄存器和栈空间。将复杂问题</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……是临界时刻)中，存在至少一个这样的时刻，使得优先级不低于￡i的所有任务请求都能够完成。3多任务周期设计基于操作系统的应用程序设计过程，就是把问题分解成多个任务的过程。每个任务都是整个应用程序的某一部分，无限<span class='green'>循环地各自实现某一特定的功能。每个任务被赋予一定的优先级，有自己的一套cPu寄存器和栈空间。将复杂问题</span>分解成各自独立的多个任务进行设计，可以简化应用软件的开发难度，并有助于从整体上提高系统的稳定性与可靠性……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《基于单调速率调度算法的μC/OS-Ⅱ多任务周期的设计》<br>作者：石为人等<br>出处：《计算机应用》&nbsp;2007年3期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">15</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">认为CPU完全只属于该程序。每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间。每个</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……一样的，只不过提供了更多的功能。pC／OS．II的每一种功能、每一个函数及每一行代码都经过了考验与测试。2．4．2uc0S的内核原理(1)任务任务也称作线程，是程序的某一部分，该程序可以<span class='green'>认为CPU完全只属于该程序。每个任务被赋予一定的优先级，有它自己的一套CPU寄存器和自己的栈空间。每个</span>任务都是一个无限的循环。每个任务都处在以下5种状态之一的状态下。休眠态、就绪态、运行态、挂起态(等待……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于DSP的电机故障监测与数据传输技术》<br>作者：李其林<br>出处：《天津理工大学》&nbsp;2007
</td>
</tr>
</table>




<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
