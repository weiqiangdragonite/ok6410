<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen">综合&nbsp;&nbsp;|&nbsp;&nbsp;<a href="226_local.htm">本地库</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="226_net.htm">网络库</a><br /></div>
<div class="zhengwen">
语句：<span class='orange' >重定位只需将NAND Flash中的代码段TEXT和数据段DATA复制到SDRAM中，最后清零BSS段即可。</span><br><br>
在本地库和网络库共找出相似内容：6个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >47</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">的主要功能就是将保存于Flash中的初始化数据复制到SRAM中。然后将．bss段清零。最后调用</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……结尾处的地址，这之后的Flash空间是初始化的数据值，应该复制到SRAM中去。～data、一edata的值分别为数据段的开始和结尾处的地址，这部分应该是SRAM的地址。这部分代码<span class='green'>的主要功能就是将保存于Flash中的初始化数据复制到SRAM中。然后将．bss段清零。最后调用</span>main进入到我们的主程序。3．2Gcc二次开发接口设计中的关键技术点（1）连接器中SysCallLib……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《中断调用方式的ARM二次开发接口设计》<br>作者：李硅<br>出处：《单片机与嵌入式系统应用》&nbsp;2013年3期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">的映象重定位，及首先把代码段和数据段从ROM中复制到RAM中，然后初始化部分RAM，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……)，执行后会弹出窗口如图4．2所示。图4．2构造bootrom窗口bootInit．C是包含了引导bootrom第二阶段的代码，该文件定义了romStart()函数，该函数执行必要的代码压缩和ROM型<span class='green'>的映象重定位，及首先把代码段和数据段从ROM中复制到RAM中，然后初始化部分RAM，</span>进行解压(如usrConfig．C文件包含了VxWorks映象的主要初始化代码，其部分功能和bootConfig．c文件里的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《VxWorks嵌入式操作系统在激光通信主控系统中的研究》<br>作者：林建<br>出处：《长春理工大学》&nbsp;2008
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">我使用这些定位信息将Flash中的代码和数据搬移到SDRAM中。地址重映射的准备工作都完成了，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……中去执行。所以要完成从ROM到RAM的数据传输和内容清零。ARMLink同时还产生了这三种输出段的起始和终止定位信息：东北大学硕士学位论文第六章系统的软件设计在本系统中的程序中，<span class='green'>我使用这些定位信息将Flash中的代码和数据搬移到SDRAM中。地址重映射的准备工作都完成了，</span>然后就需要编写程序来实现这个过程。系统的地址重映射是在系统的启动中完成的，在应用程序……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《ARM处理器在医学数据采集系统中的应用与研究》<br>作者：王敏<br>出处：《东北大学》&nbsp;2006
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">4KB代码将NANDFlash上的U—Boot代码整个复制到空间更大的RAM中，即代码重定位3．2</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……NANDFlash的前4KB代码拷贝到称为Stepping—stone的内置SRAM中，并将SRAM映射到OxO地址处，然后CPU从0x0地址开始执行。由于U—Boot的启动代码大小一般都会大于4KB，所以需要利用这<span class='green'>4KB代码将NANDFlash上的U—Boot代码整个复制到空间更大的RAM中，即代码重定位3．2</span>NANDFlsah代码重定位的流程S，知道从NORF1ash启动和从NANDF1ash启动的总体步骤并无二致，……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《支持多种闪存启动的U-Boot实现方法的改进》<br>作者：卞芸等<br>出处：《微计算机信息》&nbsp;2012年2期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">结束地址与RW段的起始地址不相等，先将RW段复制到SDRAM中，然后再将zi段清零。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……以保证程序可以正确运行。具体的设计方法为；首先判断RO段的结束地址与RW段的起始地址是否相同如果不同说明Rw段已经复制到SDRAM中了，只需要将zi段清零郎可，否则如果RO段的<span class='green'>结束地址与RW段的起始地址不相等，先将RW段复制到SDRAM中，然后再将zi段清零。</span>﻿中北大学学位论文CⅣ皿：得到RO段的结束地址：得到Rw段的起始地址：得至吐zi……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于ARM的SDSM操作系统处理机管理技术研究》<br>作者：连嘉<br>出处：《中北大学》&nbsp;2007
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">写时处理器无法从Flash中读取指令，因此应将Ro和Rw复制到RAM中，并将zI清零。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……变量，zI是未初始化的全局变量(在GNu中对应的概念是TExT、DATA和BsS)。R0代码既可以在Flash中运行，也可以在RAM中运行。考虑到Bootloader可能需要烧写Flash，而烧<span class='green'>写时处理器无法从Flash中读取指令，因此应将Ro和Rw复制到RAM中，并将zI清零。</span>Ro复制完毕之后，程序就可以跳转到RAM中运行。若不考虑烧写程序始终在Flash中运行。填写中断……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《关于三星S3C44BOX目标板的μClinux Bootloader》<br>作者：盛磊<br>出处：《电子产品世界》&nbsp;2005年9期
</td>
</tr>
</table>




<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
