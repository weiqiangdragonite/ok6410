<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen">综合&nbsp;&nbsp;|&nbsp;&nbsp;<a href="302_local.htm">本地库</a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="302_net.htm">网络库</a><br /></div>
<div class="zhengwen">
语句：<span class='orange' >支持同优先级任务即多个任务可以拥有相同的优先级，而不同优先级是每个任务必须分配各不相同的优先级。</span><br><br>
在本地库和网络库共找出相似内容：18个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >49</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">，让低优先级任务继承高优先级任务的优先级，即把低优先级任务的优先级提高到高优先级任务</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……解决方法图3采用优先级继承消除优先级反转目前解决优先级反转有许多种方法，其中优先级继承（priorityiHheritaHce）是最理想的一种办法。在优先级继承方案中，当高优先级任务在等待低优先级的任务占有的信号量时<span class='green'>，让低优先级任务继承高优先级任务的优先级，即把低优先级任务的优先级提高到高优先级任务</span>的优先级；当低优先级任务释放高优先级任务等待的信号量时，立即把其优先级降低到原来的优先级……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《嵌入式RTOS中就绪任务查找算法和优先级反转的解决方案》<br>作者：万柳等<br>出处：《计算机应用》&nbsp;2003年6期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >47</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">让低优先级的任务继承高优先级的任务低优先级，即把低优先级任务的优先级提高到高优先级</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……资源分配给它。一旦作业拥有某资源，那么它的执行优先级比所有作业的优先级都高。这种协议称为不可抢占临界区协议-(’.。当高优先级的任务在等待低优先级的任务占有的信号量时，<span class='green'>让低优先级的任务继承高优先级的任务低优先级，即把低优先级任务的优先级提高到高优先级</span>任务的优先级；当低优先级任务释放高优先级任务等待的信号量时，立即把其优先级降低到原来的优先……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《嵌入式RTOS中任务优先级反转问题研究》<br>作者：李屏等<br>出处：《信息技术》&nbsp;2006年9期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >46</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">支持64个任务，每个任务都具有唯一的优先级，但是不支持同优先级任务的调度。占先式的固定</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……任务调度机制的改进方法既保留原调度机制的高度实时性，也增加任务调度方式的灵活性，并且实现简单、有效。摘要：0引言μC/OS-II内核采取了占先式的固定优先级的任务调度策略，2.52版本可<span class='green'>支持64个任务，每个任务都具有唯一的优先级，但是不支持同优先级任务的调度。占先式的固定</span>优先级的任务调度策略需要在建立任务时就为每个任务设置唯一的固定的优先级，然而，在实际应用中，往往……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《一种μC/OS-II中任务调度机制的改进方法》<br>作者：赵国富等<br>出处：《现代计算机（专业版）》&nbsp;2013年10期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >46</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">低优先级任务继承高优先级任务的优先级，即把低优先级任务提高到高优先级任务的优先级；</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……崩溃。4．2优先级翻转的解决方法目前解决优先级反转有许多种方法。其中普遍使用的有2种方法：一种被称作优先在优先级继承方案中，当高优先级任务在等待低优先级的任务占有的信号量时，让<span class='green'>低优先级任务继承高优先级任务的优先级，即把低优先级任务提高到高优先级任务的优先级；</span>当低优先级任务释放高优先级任务等待的信号量时，立即把其降低到原来的优先人连理Jr=人学硕士……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《Java虚拟机上实时系统的研究与实现》<br>作者：荆华<br>出处：《大连理工大学》&nbsp;2005
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">表示高优先级任务的优先级，PrioL表示低优先级任务的优先级，PrioCur表示当前任务的优先级。，，交换</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……图2所示，这时我们修改0STCBPrioTbl，如图3所示。当任务再次调度后，就使任务L运行于与任务H相同的优先级水平，避免了优先级逆转。’实现的原理我们用伪代码描述如图4所示，Priori<span class='green'>表示高优先级任务的优先级，PrioL表示低优先级任务的优先级，PrioCur表示当前任务的优先级。，，交换</span>指针，，为任务切换创造条件，／任务切换图4算法描述2．2实现优先级继承互斥向量mutex为了尽力与¨……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《基于优先级继承协议解决μC/OS优先级逆转问题》<br>作者：赵跃华等<br>出处：《计算机工程与设计》&nbsp;2008年8期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='orange' >44</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">，让低优先级任务继承高优先缓任务的优先级，即把低优先缎任务的优先权提高到高优先级任务</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……设计较为复杂，为编程^员带来一定难度，且一旦分配错误还会影响系统的稳定性．所以根少使用该簟略。(2)优先级继承篱略”1当高优先级任务在等待低优先级的任务占有的信号量时<span class='green'>，让低优先级任务继承高优先缓任务的优先级，即把低优先缎任务的优先权提高到高优先级任务</span>的优先级；当低优先缀任务释放高倪先级任务等待的信号量时，立即把其优先权降低到原来的优先……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《μC/OS-Ⅱ实时系统任务调度优化》<br>作者：徐亮等<br>出处：《计算机工程》&nbsp;2007年19期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">7</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">时让低优先级的任务继承高优先级的任务低优先级即把低优先级任务的优先级提高到高优先级任</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……_1执行即出现了优先级反转的情况[3]图1发生优先级反转目前解决优先级反转主要有两种基本方法一种称为优先级继承在优先级继承方案中当高优先级的任务在等待低优先级的任务占有的信号量<span class='green'>时让低优先级的任务继承高优先级的任务低优先级即把低优先级任务的优先级提高到高优先级任</span>务的优先级当低优先级任务释放高优先级任务等待的信号量时立即把其优先级降低到原来的优先级采用……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《嵌入式RTOS中任务调度问题研究》<br>作者：冀常鹏等<br>出处：《辽宁工程技术大学学报（自然科学版）》&nbsp;2004年
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">8</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">静态优先级分配算法分配的优先级为自然优先级，称静态有限优先级分配中，每个任务实际分配的优先级Pf</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……(C)任务切换时间很小，可以忽略(假定为0)；(d)当同时存在一个任务的多个实例时，按其释放次序依次执行，即后来的实例不会影响之前的实例．为便于区分，称由RM，DM，MRM等最优<span class='green'>静态优先级分配算法分配的优先级为自然优先级，称静态有限优先级分配中，每个任务实际分配的优先级Pf</span>∈【1，，，l】为系统优先级．在实际系统中，常用队列管理系统优先级相同的任务，具有相同系统……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《一种静态最少优先级分配算法》<br>作者：邢建生等<br>出处：《软件学报》&nbsp;2007年7期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">9</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">实现相同优先级任务的调度，其次还可以有不同优先级的任务存在，最后这些任务按照分配的优先级进行调度，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……改进后的I‘c／0s一Ⅱ内核上执行，运行结果如图6．3所示。图6．3改进后的pC／0s一Ⅱ运行相同优先级任务实验结果表明，经本文改进后的llc／0S—II内核可以<span class='green'>实现相同优先级任务的调度，其次还可以有不同优先级的任务存在，最后这些任务按照分配的优先级进行调度，</span>即同有优先级任务可以轮转调度，并且保持了pc／0S一Ⅱ抢占调度的特征。任务调度时序如图6．……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《实时操作系统中实时调度算法及其资源管理的研究》<br>作者：周本海<br>出处：《沈阳工业大学》&nbsp;2007
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">10</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">被高优先级任务抢占时，系统提高低优先级任务的优先级，把它提高到高优先级任务的优先级；</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……防止中间优先级的任务抢占此任务的可能，从而杜绝了低优先级反转问题。显然，第二种方法更适台实时系统的设计需求。2，3．1优先级继承在优先级继承方案中，当正在使用共享资源的低优先级任务<span class='green'>被高优先级任务抢占时，系统提高低优先级任务的优先级，把它提高到高优先级任务的优先级；</span>当低优先级任务释放高优先级任务等待的信号量时，立即把其优先权降低到原来的优先权。这种方法可以……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《关于RTOS抢占式调度及优先级反转的几点探讨》<br>作者：宋丰末等<br>出处：《计算机工程与设计》&nbsp;2007年19期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">11</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">减少高优先级任务被多个低优先级任务阻塞的时间。低优先级任务在运行中，继承了高优先级任务</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……级任务抢占执行后也要访问该资源时，低优先级任务将提升自身的优先级到高优先级任务的级别。保证低优先级任务继续使用当前资源，以尽快完成访问，尽快释放占用的资源，使高优先级任务得以执行，从而<span class='green'>减少高优先级任务被多个低优先级任务阻塞的时间。低优先级任务在运行中，继承了高优先级任务</span>的优先级，所以该协议被称作优先级继承协议。因为只有高优先级任务访问IF被低优先级任务使用的资源时……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《基于ARM的嵌入式强实时内核设计》<br>作者：谭强<br>出处：《辽宁师范大学》&nbsp;2008
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">12</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">优先级，如发现任务C的优先级小于自身的优先级，则将任务c的优先级提升到自身的优先级，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……优先级发生了反转，任务B先于任务A运行。这样便不能保证高优先级任务的响应时间。用优先级继承的方法解决反转问题是当任务A申请共享资源s时，如果S正在被任务c使用，通过比较任务c与自身的<span class='green'>优先级，如发现任务C的优先级小于自身的优先级，则将任务c的优先级提升到自身的优先级，</span>任务C释放资源S后，再恢复任务C的原优先级。优先级继承协议可以很好的解决死锁和反转问题，但实现……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《关于μc/OS-Ⅱ内核的改进研究》<br>作者：刘倩等<br>出处：《网络新媒体技术》&nbsp;2008年6期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">13</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">板优先级协议方法个任务的优先级是已经知道的，每个任务要求的资源任务。优先级当任务A的优先级</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……复杂则需要进行判断。／-C／OS～II不支持优先级继承，而且／-C／OS—II以任务的优先级作为任务标识，每个优先级只能有一个任务，因此不适宜在应用程序中使用优先级继承。3．2天花<span class='green'>板优先级协议方法个任务的优先级是已经知道的，每个任务要求的资源任务。优先级当任务A的优先级</span>提升时(它本身正在对共享资源R存取)，任务A将不会为任何其他资源挂起。这种方法相对简单，不需要进行……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《基于μC/OS-Ⅱ嵌入式实时系统的优先级倒置分析》<br>作者：李光成等<br>出处：《计算机技术与发展》&nbsp;2007年7期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">14</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">线程的优先级被提高到与高优先级线程相同的优先级，即继承高优先级。这样，低优先级的</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……，LynxOS提供了两种方法防止优先级倒置：优先级继承和优先级置顶。优先级继承是指当高优先级的线程调用某一关键代码段(或某一资源)时，由于该资源被低优先级的线程锁定而阻塞，这时低优先级<span class='green'>线程的优先级被提高到与高优先级线程相同的优先级，即继承高优先级。这样，低优先级的</span>线程可以被执行，释放资源，为高优先级线程的执行扫除障碍。优先级置顶是指当高优先级的线程调用某一……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
篇名：《硬实时操作系统优先级倒置的解决》<br>作者：张辰等<br>出处：《微处理机》&nbsp;2005年1期
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">15</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容：</font><br>
<span class="green">区的低优先级任务所阻塞后，由于低优先级任务的优先级将提升为这个高优先级任务的优先级，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似内容片段：</font><br>
……锁的优先级任务所阻塞时，这个低优先级任务将暂时继承这个高优先级任务的优先级；当低优先级任务释放互斥锁后，又将恢复它原来的优先级．依照这种算法，一个高优先级被一个正处在临界<span class='green'>区的低优先级任务所阻塞后，由于低优先级任务的优先级将提升为这个高优先级任务的优先级，</span>从而中优先级任务将不能对这个低优先级任务进行抢占。所以，这就避免了优先级倒置的现象。从优先……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
篇名：《路由器操作系统的研究与实现》<br>作者：任晋奎<br>出处：《上海交通大学》&nbsp;2001
</td>
</tr>
</table>




<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
