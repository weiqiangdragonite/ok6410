<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>

<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="#">上一页</a>
<a class="pagelink" href="paper_2.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：1/8页
]
</div>

<br><div style="margin-left:25px">

<img src="../../images/guanwang.gif"></div><br><br>
<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">1</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>摘    要</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">2</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>近年来，嵌入式应用越来越广泛，物联网、智能家居、可穿戴式设备等也慢慢走入人们的生活中，嵌入式应用在我们的生活中扮演着越来越重要的角色。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">3</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/2.htm' target='right' class='orange' >嵌入式操作系统是嵌入式应用的核心，编写嵌入式操作系统，能加深对操作系统基本原理的理解和实现。</a><a href='../sentence_detail/3.htm' target='right' class='orange' >本课题基于 ARM11微处理器的开发板，按照软件工程的基本流程，实现了一个简单可用的小型嵌入式操作系统，</a><a href='../sentence_detail/4.htm' target='right' class='orange' >该小型操作系统具基本的多任务调度、中断服务、时间管理和内存管理功能。</a><span class='green'>采用按优先级抢占式的调度机制来进行任务调度，具有较高的实时性，同时使用固定分区法来进行内存分区管理。</span><a href='../sentence_detail/6.htm' target='right' class='orange' >此外，该系统还有任务延时、挂起、删除等基本操作。</a><a href='../sentence_detail/7.htm' target='right' class='orange' >最后对该系统进行测试，验证系统设计的正确性，并提出系统的不足和改进的地方。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">4</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>关键词  嵌入式；</span><span class='green'>操作系统；</span><span class='green'>多任务调度；</span><span class='green'>内存管理；</span><span class='green'>优先级抢占式调度</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">5</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>绪论</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">6</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.1 课题来源及研究目的与意义</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">7</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/15.htm' target='right' class='orange' >嵌入式开发是当下热门的开发，嵌入式技术普遍的应用于各个领域。</a><span class='green'>学习嵌入式开发，大多选择51单片机或者 ARM芯片来进行学习开发，由于 ARM芯片是大多数嵌入式设备的主要开发平台，</span><a href='../sentence_detail/17.htm' target='right' class='orange' >而且 ARM芯片具有性能高、体积小、功耗低等特点，因此学习 ARM嵌入式开发具有一定的优势。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">8</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/18.htm' target='right' class='red' >学习嵌入式开发，可大概分为：</a><a href='../sentence_detail/19.htm' target='right' class='red' >嵌入式应用开发、嵌入式操作系统系统开发和硬件开发。</a><a href='../sentence_detail/20.htm' target='right' class='orange' >嵌入式应用和嵌入式系统操作系统开发一般都紧密结合，而当下嵌入式操作系统虽多，</a><span class='green'>但即使是像μ C/ OS或者 QNX这些小巧的嵌入式操作系统内核，其代码量也是非常多的，</span><a href='../sentence_detail/22.htm' target='right' class='orange' >而像嵌入式 Linux的，其代码就更加庞大了。</a><span class='green'>对学习操作系统的学生来说，由于缺少对操作系统设计和实现的经验，在没有一个比较清晰的思路和逻辑的情况下，去阅读内核代码是非常徒劳无用的。</span><span class='green'>因此，我们需要自己动手，实际去编写一个嵌入式操作系统，哪怕这个操作系统只能进行简单的任务调度，这也能加深我们对操作系统原理的理解，</span><span class='green'>激发我们的热情和兴趣，继续去为这个内核添加更多的功能。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">9</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/26.htm' target='right' class='orange' >选择设计嵌入式操作系统这个题目，具有重大而深远的意义。</a><a href='../sentence_detail/27.htm' target='right' class='orange' >计算机系统里面最重要的部分就是操作系统了，在学习和设计操作系统的过程中，</a><a href='../sentence_detail/28.htm' target='right' class='orange' >能加深我们对操作系统基本原理的理解，对计算机系统的工作过程也会更加清晰。</a><a href='../sentence_detail/29.htm' target='right' class='orange' >虽然嵌入式操作系统和通用的计算机系统具有一定的差别，但其基本的工作原理都是相同的，</a><a href='../sentence_detail/30.htm' target='right' class='orange' >而嵌入式操作系统相对于通用计算机系统，其内核更加小巧，更加适合学习和开发。</a><span class='green'>因此本论文所写的小型嵌入式操作系统，其内核功能也是相对简单，但主要还是以加强对操作系统的理解，并运用基本的原理来设计开发一个能正常运行和工作的操作系统。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">10</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/32.htm' target='right' class='red' >1.2 嵌入式操作系统的现状与分析</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">11</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/33.htm' target='right' class='orange' >嵌入式系统是从20世纪70年代微处理器出现后发展起来的，当时的系统结构和功能相对单一，主要用于工业控制[1]。</a><a href='../sentence_detail/34.htm' target='right' class='orange' >如今，通信、工业控制、消费电子、航空、航天等都存在着嵌入式设备的身影，嵌入式已经普遍的应用于各个领域中。</a><span class='green'>近年来，嵌入式技术的发展越来越突飞猛进，移动设备、平板电脑等已成为人们生活中不可或缺的电子产品，</span><span class='green'>现在物联网、智能家居、可穿戴式设备等嵌入式技术也正大力发展中。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">12</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/37.htm' target='right' class='orange' >嵌入式操作系统（Embedded Operating System，EOS）是嵌入式系统的核心部分，与通用计算机操作系统相比，具有专用性、可裁剪、易移植、高可靠等特点。</a><span class='green'>如今，已经拥有相当多的主流嵌入式操作系统，比如 VxWorks、 Windows CE、 FreeRTOS、μ C/ OS-Ⅱ/Ⅲ、嵌入式 Linux、 eCOS、 QNX等等，</span><a href='../sentence_detail/39.htm' target='right' class='orange' >还有应用于移动设备上的操作系统也属于嵌入式操作系统，像 Android、 iOS、 Windows Phone、 Firefox OS等等。</a><a href='../sentence_detail/40.htm' target='right' class='orange' >这些嵌入式操作系统既有商业付费的，也有开源免费的，都是当前普遍应用于各种设备上的嵌入式操作系统。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">13</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/41.htm' target='right' class='orange' >虽然低端的嵌入式设备不一定具备嵌入式操作系统，但大多数嵌入式设备都由嵌入式操作系统来管理其相应的软件和硬件资源。</a><span class='green'>不同的嵌入式操作系统包含不同的基本功能组件，但都具备一个基本的内核，这个内核主要的功能就是提供多任务的管理、时间的管理、事件的管理、内存的管理和设备的管理等，</span><span class='green'>实现既有简单也有复杂，像μ C/ OS-Ⅱ的内核就相对简单，而嵌入式 Linux就和桌面版的 Linux差不多了，</span><span class='green'>因此功能也相对更强大。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">14</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/45.htm' target='right' class='orange' >目前，大多数嵌入式操作系统的技术大都以国外为主，国内嵌入式的发展技术与美国等发达国家相比还存在着一定的差距，</a><span class='green'>但总体的发展趋势还是相当好的，像智能家居、可穿戴式设备等国内也搞得很火热。</span><span class='green'>而自主的嵌入式操作系统并没有得到广泛的应用，因此，我国不论是嵌入式系统还是相关的嵌入式技术发展，还是具有比较大的发展空间，国内的嵌入式开发前景还是非常不错的。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">15</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1.3 本论文的主要工作</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">16</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/49.htm' target='right' class='orange' >本论文所设计的小型嵌入式操作系统完成的主要工作和解决的难点有以下：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">17</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>查阅国内国外有关嵌入式的文献资料，比如嵌入式发展的历史与现状、应用领域、嵌入式系统的基本设计和实现等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">18</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>学习ARM的体系结构和基本汇编，掌握S3C6410的硬件结构和ARM嵌入式的开发，并编写开发板上相应的引导程序和硬件驱动。</span><span class='green'>其中的主要难点是向开发板的NAND Flash写入操作系统的引导程序，中断服务程序的编写，系统更新程序的编写等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">19</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>利用所学操作系统的基本原理，在开发板上实现一个简单的操作系统，该系统采用了按优先级抢占式的调度机制来进行任务调度，并拥有简单的内存管理功能。</span><a href='../sentence_detail/54.htm' target='right' class='orange' >其中设计难点有任务控制块的设计，任务的切换、调度、中断的实现等。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">20</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>本系统还实现了基本的时间管理功能，如让任务进行延时等操作，同时还有任务的挂起、恢复、删除等操作。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">21</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>在本嵌入式操作系统的基础上设计测试应用来验证该系统的功能，并在最后对该系统提出一些能继续进行改进的地方。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">22</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ARM技术及开发板介绍</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">23</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.1 ARM体系结构</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">24</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.1.1 ARM处理器的简介</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">25</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/60.htm' target='right' class='orange' >嵌入式系统的核心硬件就是嵌入式处理器，嵌入式处理器的体系结构如果按不同的内核系列可以分为51、 AVR、 MIPS、 PowerPC、 ARM等，</a><span class='green'>像51单片机采用的就是51系列的内核芯片， Arduino采用的就是 AVR的芯片，而 ARM就是目前最广泛使用的嵌入式处理器芯片。</span><span class='green'>从1991年到2014年，ARM处理器的历史出货量已经超过了500亿颗，广泛的应用于移动领域、嵌入式领域、企业和家用等市场[2]。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">26</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/63.htm' target='right' class='orange' >ARM既是一间公司的名字，也是一系列处理器的名称。</a><span class='green'>ARM的全称是Advanced RISC Machine，由此可看出ARM处理器的指令集是精简指令集（Reduced Instruction Set Computer，RISC）。</span><a href='../sentence_detail/65.htm' target='right' class='orange' > ARM处理器的主要特点是功耗低、省电、性能强大、成本低，拥有16位 Thumb、32位 ARM和 Thumb-2双指令集，</a><span class='green'>最重要的是 ARM拥有许多领域方面的合作伙伴，像苹果、三星、高通等，因此使得 ARM处理器能全面广泛的应用于多个领域。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">27</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ARM处理器多数为哈佛结构，拥有16/32位指令集，多处理器状态模式等设计技术。</span><span class='green'>ARM处理器不同的内核采用不同的体系结构，像经典处理器的 ARM7采用的是 ARMV4 T的结构， Cortex- A采用的是 ARMV7- A的结构，</span><span class='green'>具体可到 ARM公司的官网查看 ARM内核采用的体系结构版本。</span><a href='../sentence_detail/70.htm' target='right' class='orange' >目前市场上主要使用的内核有ARM7、ARM9的老架构，还有近年来比较流行的Cortex-A和Cortex-M系列的架构芯片。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">28</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/71.htm' target='right' class='red' >2.1.2 ARM处理器的工作状态和工作模式</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">29</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/72.htm' target='right' class='orange' > ARM处理器一般拥有2种工作状态和7种工作模式，因为 ARM处理器拥有16/32位指令集，</a><a href='../sentence_detail/73.htm' target='right' class='orange' >因此 ARM处理器可以在 ARM和 Thumb及 Thumb-2这两种工作状态间切换。</a><span class='green'>ARM状态就是ARM处理器完全工作在32位指令下的状态，在此状态下的指令长度均为32位。</span><span class='green'>Thumb状态就是工作在16位指令下的状态，这时的指令代码只有16位，占用的内存空间小，代码密度大，能提供比32位程序代码更好的性能。</span><a href='../sentence_detail/76.htm' target='right' class='orange' >Thumb-2状态是ARM处理器新的状态，首次出现在ARM11系列的芯片。</a><span class='green'>Thumb-2同时具有16位和32位的指令，能提供更高性能、功耗更小和占用内存更小的优点。</span><a href='../sentence_detail/78.htm' target='right' class='orange' >ARM处理器复位后只处于ARM状态，可通过相应的指令集在ARM状态和Thumb状态下进行切换。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">30</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/79.htm' target='right' class='red' >ARM有7种工作模式，分别是用户 模式、快速 中断 模式、外部 中断 模式、管理 模式、中止 模式、未定义 指令 模式和系统 模式。</a><span class='green'>当工作模式为用户模式时，处理器将不能改变当前的工作模式，除非发生异常，其它的工作模式能进行互相切换。</span><span class='green'>通过相应的指令可以向程序状态寄存器CPSR的第0到第4位，即[M4:</span><span class='green'>M0]写入相应的值即可进入对应的工作模式。</span><span class='green'>具体的工作模式如下图所示。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">31</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图2-1 ARM处理器的工作模式</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">32</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2.1.3 ARM处理器的寄存器</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">33</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/86.htm' target='right' class='orange' >ARM处理器有31个通用寄存器，6个状态寄存器，总共是37个32位的寄存器，ARM状态下不同工作模式的寄存器如下图所示。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">34</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图2-2 ARM状态下的寄存器</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">35</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/88.htm' target='right' class='orange' >从图2-2可看出，ARM处理器在不同的工作模式下所使用的寄存器是不同的。</a><a href='../sentence_detail/89.htm' target='right' class='red' >通用寄存器 R0- R7在所有模式下是共用的，快速中断模式下有自己专用的寄存器 R8- R12，</a><a href='../sentence_detail/90.htm' target='right' class='orange' >系统模式和用户模式下使用相同的堆栈指针 R13（ Stack Pointer， SP）和程序链接寄存器 R14（ Link Register，</a><span class='green'>LR），其它模式都有自己特定的寄存器。</span><a href='../sentence_detail/92.htm' target='right' class='orange' >最后一个通用寄存器是程序计数器R15，总共有31个通用寄存器。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">36</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/93.htm' target='right' class='orange' >状态寄存器有1个当前程序状态寄存器 CPSR，5个备份程序状态寄存器 SPSR，分别用于5种工作模式，</a><a href='../sentence_detail/94.htm' target='right' class='orange' >用户模式和系统模式没有备份程序状态寄存器，程序状态寄存器的格式如下图所示。</a>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="#">上一页</a>
<a class="pagelink" href="paper_2.htm">下一页</a>
<a class="pagelink" href="paper_8.htm">尾页</a>
页码：1/8页
]
</div>

</div>

<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2013 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
